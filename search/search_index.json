{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"hitfactorpy_graphql_server \u00b6 GraphQL API for managing match reports. Status \u00b6 Work in progress\u2026","title":"Introduction"},{"location":"#hitfactorpy_graphql_server","text":"GraphQL API for managing match reports.","title":"hitfactorpy_graphql_server"},{"location":"#status","text":"Work in progress\u2026","title":"Status"},{"location":"cli/","text":"CLI Usage \u00b6 $ hitfactorpy-graphql-server --help $ python -m hitfactorpy-graphql-server --help --version \u00b6 Prints the package version and exits. $ hitfactorpy-graphql-server --version 0.0.1 run \u00b6 Shortcut for uvicorn.run . $ hitfactorpy-graphql-server run","title":"CLI"},{"location":"cli/#cli-usage","text":"$ hitfactorpy-graphql-server --help $ python -m hitfactorpy-graphql-server --help","title":"CLI Usage"},{"location":"cli/#-version","text":"Prints the package version and exits. $ hitfactorpy-graphql-server --version 0.0.1","title":"--version"},{"location":"cli/#run","text":"Shortcut for uvicorn.run . $ hitfactorpy-graphql-server run","title":"run"},{"location":"linux-setup/","text":"Linux dev environment steps \u00b6 Prerequisites \u00b6 Install system dependencies \u00b6 poetry pyenv and its dependencies verify installation with pyenv doctor Setup pyenv for project \u00b6 pyenv virtualenv 3.10 hitfactorpy_graphql_server : create a virtualenv named \u201chitfactorpy_graphql_server\u201d using python v3.10 pyenv local hitfactorpy_graphql_server : configure pyenv to use \u201chitfactorpy_graphql_server\u201d for the current directory pyenv activate hitfactorpy_graphql_server : activate the virtualenv Configure poetry to recognize pyenv \u00b6 poetry config virtualenvs.prefer-active-python true Verify output of poetry env info ; the paths for Virtualenv and System should match the value of $PYENV_ROOT (default: $HOME/.pyenv ) Development \u00b6 Install dependencies: poetry install Install pre-commit hooks: pre-commit install Test: poetry run tox (or tox , or pytest tests ) Build: poetry build","title":"Linux+Pyenv"},{"location":"linux-setup/#linux-dev-environment-steps","text":"","title":"Linux dev environment steps"},{"location":"linux-setup/#prerequisites","text":"","title":"Prerequisites"},{"location":"linux-setup/#install-system-dependencies","text":"poetry pyenv and its dependencies verify installation with pyenv doctor","title":"Install system dependencies"},{"location":"linux-setup/#setup-pyenv-for-project","text":"pyenv virtualenv 3.10 hitfactorpy_graphql_server : create a virtualenv named \u201chitfactorpy_graphql_server\u201d using python v3.10 pyenv local hitfactorpy_graphql_server : configure pyenv to use \u201chitfactorpy_graphql_server\u201d for the current directory pyenv activate hitfactorpy_graphql_server : activate the virtualenv","title":"Setup pyenv for project"},{"location":"linux-setup/#configure-poetry-to-recognize-pyenv","text":"poetry config virtualenvs.prefer-active-python true Verify output of poetry env info ; the paths for Virtualenv and System should match the value of $PYENV_ROOT (default: $HOME/.pyenv )","title":"Configure poetry to recognize pyenv"},{"location":"linux-setup/#development","text":"Install dependencies: poetry install Install pre-commit hooks: pre-commit install Test: poetry run tox (or tox , or pytest tests ) Build: poetry build","title":"Development"}]}